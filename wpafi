#! /bin/bash

PROG_NAME=$(basename ${0})

die()  { printf "${PROG_NAME}: $1\n" "${@}" 1>&2; exit 1; }
warn() { printf " - $1\n" "${@}" ; exit 1; }
msg()  { printf "$1\n" "${@}"; }  

usage ()
{
die "Usage: ${PROG_NAME} [OPTION]
if no option passed. script will running in background
	if already runned . will restart
	
Options:
  -h                   : show this help page
  -l interface         : show wifi devices
  -n ssid=password     : make new configuration
  -k                   : stopping the script
  -r                   : runing script
  -s                   : script status 
Examples:
  $ ${PROG_NAME} -n tplink=12345678
  $ ${PROG_NAME} -l wlan0"

}

change_config_file()
{
	ssid=$(msg $1 | cut -d= -f1)
	pass=$(msg $1 | cut -d= -f2)

	if [[ ! $ssid ]] && [[ ! $pass ]] ; then
		warn "\n - ssid or password not set .\n"
	fi

	if [[ $(wpa_passphrase $ssid $pass &>/dev/null ; msg $?) = 1 ]] ;then
		warn "\n - ssid or password wrong . \n" 
	fi
	mkdir -p /etc/wpa_supplicant
	wpa_passphrase $ssid $pass > /etc/wpa_supplicant/wpa_supplicant.conf
	msg "done"
}
list_wifi_devices()
{
	iface=$1
	
	msg "wait..."
	iwlist $iface scanning | grep -E "Cell|ESSID|Encryption" --color=no
}
permit()
{
	[[ ${UID} != 0 ]] &&
		die "you need permision for this option : Permission denied"
}
off_wpafi()
{
	if [[ $(pgrep dhclient) ]] &&
		[[ $(pgrep wpa_supplicant) ]] ;then
		
		pkill dhclient
		pkill wpa_supplicant
	elif [[ ! $(pgrep dhclient) ]] &&
		[[  ! $(pgrep wpa_supplicant) ]] ;then
		msg " - already stopped"
	fi
}
run_wpafi()
{
	off_wpafi &>/dev/null
	wpa_supplicant -B -iwlan0 -Dnl80211 -c /etc/wpa_supplicant/wpa_supplicant.conf &>/dev/null &
	dhclient --no-pid wlan0 &>/dev/null &
	msg " - up and running"
}
status_wpafi()
{
	if [[ $(pgrep dhclient) && $(pgrep wpa_supplicant) ]] ;then
		warn "started"
	else
		warn "stopped"
	fi
}
main()
{
	arg0=$1

	[[ ${arg0} = @(-h|--help) ]] &&
		usage
	[[ ! ${arg0} ]] &&
		permit && run_wpafi

	while getopts "n:l:hrks" argv ;do
		case ${argv} in
			h)
				usage 
				;;
			r)
				permit 
				is_run_wpafi=true
				;;
			k)
				permit 
				is_off_wpafi=true
				;;
			n)
				permit
				is_change_config_file=true
				change_config_file_opt=${OPTARG}
				;;
			l)
				permit
				is_list_wifi_devices=true
				list_wifi_devices_opt=${OPTARG}
				;;
			s)
				permit
				is_status_wpafi=true
				;;
			:)
				usage 
				;;
			?)
				usage
				;;
		esac
	done

	[[ ${is_run_wpafi} ]] &&
		run_wpafi
	[[ ${is_off_wpafi} ]] &&
		off_wpafi
	[[ ${is_change_config_file} ]] &&
		change_config_file ${change_config_file_opt}
	[[ ${is_list_wifi_devices} ]] &&
		list_wifi_devices ${list_wifi_devices_opt}
	[[ ${is_status_wpafi} ]] &&
		status_wpafi
}

main $@
